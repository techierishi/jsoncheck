#!/usr/bin/env groovy
import hudson.model.*

node {
    String repoUrl = 'git@github.com:techierishi/jsoncheck.git'
    String WORKSPACE = pwd()

    stage('Checkout') {
            sh 'echo "Checkout"'

        checkout changelog: true, poll: false, scm: [$class: 'GitSCM',
            branches: [[name: 'origin/master']],
            doGenerateSubmoduleConfigurations: false,
            extensions: [[$class: 'CloneOption',
            depth: 10,
            noTags: true,
            reference: '',
            shallow: false],
            [$class: 'RelativeTargetDirectory',
            relativeTargetDir: 'app']],
            submoduleCfg: [],
            userRemoteConfigs: [[url: repoUrl]]]
    }

    stage('Build') {
            sh """
            pwd
            ls -la ${WORKSPACE};
            ls -la ${WORKSPACE}/app;
            """

            sh """
            export PATH=$PATH:/usr/local/bin
            pwd
            ls -la
            cd app;
            mkdir -p ${WORKSPACE}/app/jsonLintCheck;
            mv ${WORKSPACE}/jsonLintCheck/* ${WORKSPACE}/app/jsonLintCheck || true;
            npm install jsonlint;
            pwd
            ls -la
            """

            Random random = new java.util.Random();
            Boolean bool =  random.nextBoolean();
            String pf = (bool) ? 'pass.json' : 'fail.json';
            echo('BOOL!')
            echo(pf)

            String shellStatus = sh(returnStatus: true, script: """
            export PATH=$PATH:/usr/local/bin && pwd && ${WORKSPACE}/app/node_modules/.bin/jsonlint ${WORKSPACE}/app/${pf} > output.log || true
            """).toString().trim();
            
            // String shellStatus = sh(returnStatus: true, script: '''
            // export PATH=$PATH:/usr/local/bin && pwd && ${WORKSPACE}/app/node_modules/.bin/jsonlint ${WORKSPACE}/app/pass.json > output.log || true
            // ''').toString().trim();
            String output = readFile("${WORKSPACE}/output.log").trim()
            
            if(shellStatus == '0'){
                echo('PASSED!')
                echo(output)
            }else if(shellStatus == '1'){
                echo('FAILED!')
                echo(output)
            }

    }
    stage('Test') {
            sh 'echo "Test"'
    }
    stage('Deploy') {
            sh 'echo "Deploy"'
    }
}
